services:
  app:
    build: .
    container_name: image-service
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - S3_BUCKET_NAME=images-bucket
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=images_db
      - MONGODB_COLLECTION=images
    ports:
      - "8000:8000"
    depends_on:
      localstack:
        condition: service_healthy
      init-bucket:
        condition: service_completed_successfully
      mongodb:
        condition: service_healthy

  localstack:
    image: localstack/localstack:2.3
    container_name: localstack
    environment:
      - SERVICES=s3
      - EDGE_PORT=4566
      - AWS_DEFAULT_REGION=us-east-1
      - PERSISTENCE=1
    ports:
      - "4566:4566"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - localstack_data:/var/lib/localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  init-bucket:
    image: amazon/aws-cli
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: >
      sh -c "
      echo 'LocalStack is healthy, creating S3 bucket...' &&
      aws --endpoint-url=http://localstack:4566 s3api create-bucket --bucket images-bucket --region us-east-1 || 
      echo 'Bucket already exists or creation failed' &&
      echo 'Bucket creation process completed'
      "


  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongo_data:
  localstack_data:


